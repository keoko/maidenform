{"version":3,"sources":["webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editForm.module.css?f2f2","webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editForm.js","webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editModal.module.css?acc6","webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editModal.js","webpack:///./node_modules/@magento/venia-ui/lib/util/combineValidators.js","webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editForm.module.css","webpack:///./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editModal.module.css"],"names":["EditForm","props","classes","propClasses","handleChangePassword","shouldShowNewPassword","formatMessage","useIntl","useStyle","defaultClasses","maybeNewPasswordField","React","createElement","className","newPassword","Password","fieldName","label","id","defaultMessage","validate","combine","isRequired","hasLengthAtLeast","validatePassword","isNotEqualToField","isToggleButtonHidden","maybeChangePasswordButton","changePasswordButtonContainer","LinkButton","changePasswordButton","type","onClick","FormattedMessage","passwordLabel","Fragment","root","firstname","Field","TextInput","field","lastname","email","password","autoComplete","propTypes","shape","string","buttons","EditModal","formErrors","onCancel","onChangePassword","onSubmit","initialValues","isDisabled","isOpen","recaptchaWidgetProps","dialogFormProps","Dialog","body","bodyEditAccountInformation","confirmText","formProps","onConfirm","shouldDisableAllButtons","shouldDisableConfirmButton","shouldUnmountOnHide","title","FormError","errorContainer","errors","GoogleReCaptcha","array","handleCancel","func","handleSubmit","object","bool","containerElement","shouldRender","callbacks","Array","isArray","Error","value","values","result","i","length","callback","extendedCallback","extendedParam"],"mappings":"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","file":"2.js","sourcesContent":["import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../../../postcss-loader/dist/cjs.js!./editForm.module.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { Fragment } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { shape, string } from 'prop-types';\n\nimport { useStyle } from '../../classify';\nimport Field from '../Field';\nimport LinkButton from '../LinkButton';\nimport Password from '../Password';\nimport TextInput from '../TextInput';\n\nimport {\n    isRequired,\n    hasLengthAtLeast,\n    validatePassword,\n    isNotEqualToField\n} from '../../util/formValidators';\nimport combine from '../../util/combineValidators';\nimport defaultClasses from './editForm.module.css';\n\nconst EditForm = props => {\n    const {\n        classes: propClasses,\n        handleChangePassword,\n        shouldShowNewPassword\n    } = props;\n    const { formatMessage } = useIntl();\n\n    const classes = useStyle(defaultClasses, propClasses);\n\n    const maybeNewPasswordField = shouldShowNewPassword ? (\n        <div className={classes.newPassword}>\n            <Password\n                fieldName=\"newPassword\"\n                label={formatMessage({\n                    id: 'global.newPassword',\n                    defaultMessage: 'New Password'\n                })}\n                validate={combine([\n                    isRequired,\n                    [hasLengthAtLeast, 8],\n                    validatePassword,\n                    [isNotEqualToField, 'password']\n                ])}\n                isToggleButtonHidden={false}\n                data-cy=\"newPassword\"\n            />\n        </div>\n    ) : null;\n\n    const maybeChangePasswordButton = !shouldShowNewPassword ? (\n        <div\n            className={classes.changePasswordButtonContainer}\n            data-cy=\"editForm-changePasswordButtonContainer\"\n        >\n            <LinkButton\n                classes={classes.changePasswordButton}\n                type=\"button\"\n                onClick={handleChangePassword}\n                data-cy=\"linkButton-root\"\n            >\n                <FormattedMessage\n                    id={'global.changePassword'}\n                    defaultMessage={'Change Password'}\n                />\n            </LinkButton>\n        </div>\n    ) : null;\n\n    const passwordLabel = shouldShowNewPassword\n        ? formatMessage({\n              id: 'global.currentPassword',\n              defaultMessage: 'Current Password'\n          })\n        : formatMessage({\n              id: 'global.password',\n              defaultMessage: 'Password'\n          });\n    return (\n        <Fragment>\n            <div className={classes.root}>\n                <div className={classes.firstname}>\n                    <Field\n                        id=\"firstname\"\n                        label={formatMessage({\n                            id: 'global.firstName',\n                            defaultMessage: 'First Name'\n                        })}\n                    >\n                        <TextInput\n                            field=\"firstname\"\n                            validate={isRequired}\n                            data-cy=\"firstname\"\n                        />\n                    </Field>\n                </div>\n                <div className={classes.lastname}>\n                    <Field\n                        id=\"lastname\"\n                        label={formatMessage({\n                            id: 'global.lastName',\n                            defaultMessage: 'Last Name'\n                        })}\n                    >\n                        <TextInput\n                            field=\"lastname\"\n                            validate={isRequired}\n                            data-cy=\"lastname\"\n                        />\n                    </Field>\n                </div>\n                <div className={classes.email}>\n                    <Field\n                        id=\"email\"\n                        label={formatMessage({\n                            id: 'global.email',\n                            defaultMessage: 'Email'\n                        })}\n                    >\n                        <TextInput\n                            field=\"email\"\n                            validate={isRequired}\n                            data-cy=\"email\"\n                        />\n                    </Field>\n                </div>\n                <div className={classes.password}>\n                    <Password\n                        fieldName=\"password\"\n                        label={passwordLabel}\n                        validate={isRequired}\n                        autoComplete=\"current-password\"\n                        isToggleButtonHidden={false}\n                        data-cy=\"password\"\n                    />\n                </div>\n                {maybeNewPasswordField}\n            </div>\n            {maybeChangePasswordButton}\n        </Fragment>\n    );\n};\n\nexport default EditForm;\n\nEditForm.propTypes = {\n    classes: shape({\n        changePasswordButton: string,\n        changePasswordButtonContainer: string,\n        root: string,\n        field: string,\n        email: string,\n        firstname: string,\n        lastname: string,\n        buttons: string,\n        passwordLabel: string,\n        password: string,\n        newPassword: string\n    })\n};\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../../../postcss-loader/dist/cjs.js!./editModal.module.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { shape, string, bool, array, func, object } from 'prop-types';\n\nimport { useStyle } from '../../classify';\nimport EditForm from './editForm';\nimport FormError from '../FormError';\nimport Dialog from '../Dialog';\nimport GoogleReCaptcha from '../GoogleReCaptcha';\nimport defaultClasses from './editModal.module.css';\n\nconst EditModal = props => {\n    const {\n        classes: propClasses,\n        formErrors,\n        onCancel,\n        onChangePassword,\n        onSubmit,\n        initialValues,\n        isDisabled,\n        isOpen,\n        shouldShowNewPassword,\n        recaptchaWidgetProps\n    } = props;\n    const { formatMessage } = useIntl();\n\n    const classes = useStyle(defaultClasses, propClasses);\n\n    const dialogFormProps = { initialValues };\n\n    return (\n        <Dialog\n            classes={{ body: classes.bodyEditAccountInformation }}\n            confirmText={'Save'}\n            formProps={dialogFormProps}\n            isOpen={isOpen}\n            onCancel={onCancel}\n            onConfirm={onSubmit}\n            shouldDisableAllButtons={isDisabled}\n            shouldDisableConfirmButton={isDisabled}\n            shouldUnmountOnHide={true}\n            title={formatMessage({\n                id: 'accountInformationPage.editAccount',\n                defaultMessage: 'Edit Account Information'\n            })}\n        >\n            <FormError\n                classes={{ root: classes.errorContainer }}\n                errors={formErrors}\n            />\n            <EditForm\n                handleChangePassword={onChangePassword}\n                shouldShowNewPassword={shouldShowNewPassword}\n            />\n            <GoogleReCaptcha {...recaptchaWidgetProps} />\n        </Dialog>\n    );\n};\n\nexport default EditModal;\n\nEditModal.propTypes = {\n    classes: shape({\n        errorContainer: string\n    }),\n    formErrors: array,\n    handleCancel: func,\n    handleSubmit: func,\n    initialValues: object,\n    isDisabled: bool,\n    isOpen: bool,\n    recaptchaWidgetProps: shape({\n        containerElement: func,\n        shouldRender: bool\n    })\n};\n","/**\n * The function purpose is to group validation callbacks into a chain within single callback function.\n *\n * The single callback function should be passed as `validation` prop to an input component. It's being\n * called by the React Controller on a form submit.\n * The `callbacks` param is the array contains validators. Each validator should be either function or array. In case of a\n * validator is a function it is called the same way as React Controller does, with a field `value` and a form `values` params. If\n * the validator is an array, this means that it is extended validator which requires additional param for configuration.\n * The first index of that array should be a extended validator function, the second index is extended param, which is needed for\n * that function. So the function is called with three params on the form submit, with a field `value`, a form `values`\n * and an `extended param`.\n *\n * Example usage of the function:\n *\n * <input validate={combine([\n * foo\n * ])} .../>\n *\n * foo - validation function\n * It will be called on form submitting within chain as:\n * `foo(value, values)`\n *\n * Example usage of the function with extended callback:\n *\n * <input validate={combine([\n * [foo, bar]\n * ])} .../>\n *\n * foo - extended validator\n * bar - additional param\n * It will be called on form submitting within chain as:\n * `foo(value, values, bar)`\n *\n * Each callback being called one after another, according to their index in callbacks array, if one item returned the error\n * message, validation is failed, and rest validator are not supposed to be called.\n *\n * @param {Array} callbacks\n * @return {function(value, values): *}\n */\nexport default callbacks => {\n    if (callbacks == null || !Array.isArray(callbacks)) {\n        throw new Error('Expected `callbacks` to be array.');\n    }\n\n    return (value, values) => {\n        let result = null;\n\n        for (let i = 0; i < callbacks.length; i++) {\n            const callback = callbacks[i];\n\n            if (\n                callback == null ||\n                (!Array.isArray(callback) && typeof callback !== 'function')\n            ) {\n                throw new Error(\n                    'Expected `callbacks[' + i + ']` to be array or function.'\n                );\n            }\n\n            if (Array.isArray(callback)) {\n                const [extendedCallback, extendedParam] = callback;\n\n                if (typeof extendedCallback !== 'function') {\n                    throw new Error(\n                        'Expected `callbacks[' + i + '][0]` to be function.'\n                    );\n                }\n\n                result = extendedCallback(value, values, extendedParam);\n            } else {\n                result = callback(value, values);\n            }\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    };\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".editForm-root-QAH {\\n}\\n\\n.editForm-field-JTM {\\n}\\n\\n.editForm-email-WKv,\\n.editForm-passwordLabel-8vp {\\n}\\n\\n.editForm-buttons-YK- {\\n}\\n\\n.editForm-changePasswordButtonContainer-D9q {\\n}\\n\\n@media (max-width: 959px) {\\n    .editForm-firstname-2yB,\\n    .editForm-lastname-DCs,\\n    .editForm-password-aba,\\n    .editForm-newPassword-Anf {\\n        grid-column: 1 / span 2;\\n    }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editForm.module.css\"],\"names\":[],\"mappings\":\"AAAA;AAMA;;AAEA;AAEA;;AAEA;;AAGA;;AAEA;AAOA;;AAEA;AAEA;;AAEA;IACI;;;;QAII,uBAAuB;IAC3B;AACJ\",\"sourcesContent\":[\".root {\\n    composes: gap-x-2xs from global;\\n    composes: gap-y-sm from global;\\n    composes: grid from global;\\n    composes: grid-cols-2 from global;\\n    composes: w-full from global;\\n}\\n\\n.field {\\n    composes: col-end-span2 from global;\\n}\\n\\n.email,\\n.passwordLabel {\\n    composes: field;\\n}\\n\\n.buttons {\\n    composes: field;\\n    composes: gap-xs from global;\\n    composes: grid from global;\\n    composes: grid-flow-col from global;\\n    composes: justify-self-center from global;\\n    composes: p-xs from global;\\n}\\n\\n.changePasswordButtonContainer {\\n    composes: pt-xs from global;\\n}\\n\\n@media (max-width: 959px) {\\n    .firstname,\\n    .lastname,\\n    .password,\\n    .newPassword {\\n        grid-column: 1 / span 2;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"root\": \"editForm-root-QAH gap-x-2xs gap-y-sm grid grid-cols-2 w-full\",\n\t\"field\": \"editForm-field-JTM col-end-span2\",\n\t\"email\": \"editForm-email-WKv editForm-field-JTM col-end-span2\",\n\t\"passwordLabel\": \"editForm-passwordLabel-8vp editForm-field-JTM col-end-span2\",\n\t\"buttons\": \"editForm-buttons-YK- editForm-field-JTM col-end-span2 gap-xs grid grid-flow-col justify-self-center p-xs\",\n\t\"changePasswordButtonContainer\": \"editForm-changePasswordButtonContainer-D9q pt-xs\",\n\t\"firstname\": \"editForm-firstname-2yB\",\n\t\"lastname\": \"editForm-lastname-DCs\",\n\t\"password\": \"editForm-password-aba\",\n\t\"newPassword\": \"editForm-newPassword-Anf\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".editModal-errorContainer-53Z {\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@magento/venia-ui/lib/components/AccountInformationPage/editModal.module.css\"],\"names\":[],\"mappings\":\"AAAA;AAEA\",\"sourcesContent\":[\".errorContainer {\\n    composes: pb-xs from global;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"errorContainer\": \"editModal-errorContainer-53Z pb-xs\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}