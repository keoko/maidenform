{"version":3,"sources":["webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/paymentMethods.gql.js","webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/usePaymentMethods.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.module.css?7063","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.module.css"],"names":["GET_PAYMENT_METHODS","gql","SET_PAYMENT_METHOD_ON_CART","getPaymentMethodsQuery","setPaymentMethodOnCartMutation","usePaymentMethods","props","operations","mergeOperations","DEFAULT_OPERATIONS","setPaymentMethod","useMutation","cartId","useCartContext","data","loading","useQuery","skip","variables","value","currentSelectedPaymentMethod","useFieldState","availablePaymentMethods","cart","available_payment_methods","defaultPaymentCode","length","code","selectedPaymentCode","selected_payment_method","initialSelectedMethod","handlePaymentMethodSelection","useCallback","element","target","paymentMethod","braintree","payment_method_nonce","is_active_payment_token_enabler","isLoading","PaymentMethods","classes","propClasses","onPaymentError","onPaymentSuccess","resetShouldSubmit","shouldSubmit","formatMessage","useIntl","useStyle","defaultClasses","talonProps","radios","map","title","Object","keys","payments","includes","id","isSelected","PaymentMethodComponent","renderedComponent","React","createElement","key","className","payment_method","Radio","label","radio_label","checked","onChange","filter","noPaymentMethodMessage","payment_errors","defaultMessage","root","RadioGroup","radio_group","field","initialValue","propTypes","shape","string","func","selectedPaymentMethod","bool"],"mappings":"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","file":"6.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_PAYMENT_METHODS = gql`\n    query getPaymentMethods($cartId: String!) {\n        cart(cart_id: $cartId) {\n            id\n            available_payment_methods {\n                code\n                title\n            }\n            selected_payment_method {\n                code\n            }\n        }\n    }\n`;\n\nexport const SET_PAYMENT_METHOD_ON_CART = gql`\n    mutation setPaymentMethodOnCart(\n        $cartId: String!\n        $paymentMethod: PaymentMethodInput!\n    ) {\n        setPaymentMethodOnCart(\n            input: { cart_id: $cartId, payment_method: $paymentMethod }\n        ) {\n            cart {\n                id\n                selected_payment_method {\n                    code\n                    title\n                }\n            }\n        }\n    }\n`;\n\nexport default {\n    getPaymentMethodsQuery: GET_PAYMENT_METHODS,\n    setPaymentMethodOnCartMutation: SET_PAYMENT_METHOD_ON_CART\n};\n","import { useCallback } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport useFieldState from '@magento/peregrine/lib/hooks/hook-wrappers/useInformedFieldStateWrapper';\nimport DEFAULT_OPERATIONS from './paymentMethods.gql';\nimport mergeOperations from '@magento/peregrine/lib/util/shallowMerge';\n\nimport { useCartContext } from '../../../context/cart';\n\nexport const usePaymentMethods = props => {\n    const operations = mergeOperations(DEFAULT_OPERATIONS, props.operations);\n    const {\n        getPaymentMethodsQuery,\n        setPaymentMethodOnCartMutation\n    } = operations;\n\n    const [setPaymentMethod] = useMutation(setPaymentMethodOnCartMutation);\n\n    const [{ cartId }] = useCartContext();\n\n    const { data, loading } = useQuery(getPaymentMethodsQuery, {\n        skip: !cartId,\n        variables: { cartId }\n    });\n\n    const { value: currentSelectedPaymentMethod } = useFieldState(\n        'selectedPaymentMethod'\n    );\n\n    const availablePaymentMethods =\n        (data && data.cart.available_payment_methods) || [];\n\n    // If there is one payment method, select it by default.\n    // If more than one, none should be selected by default.\n    const defaultPaymentCode =\n        (availablePaymentMethods.length && availablePaymentMethods[0].code) ||\n        null;\n    const selectedPaymentCode =\n        (data && data.cart.selected_payment_method.code) || null;\n\n    const initialSelectedMethod =\n        availablePaymentMethods.length > 1\n            ? selectedPaymentCode\n            : defaultPaymentCode;\n\n    const handlePaymentMethodSelection = useCallback(\n        element => {\n            const value = element.target.value;\n\n            setPaymentMethod({\n                variables: {\n                    cartId,\n                    paymentMethod: {\n                        code: value,\n                        braintree: {\n                            payment_method_nonce: value,\n                            is_active_payment_token_enabler: false\n                        }\n                    }\n                }\n            });\n        },\n        [cartId, setPaymentMethod]\n    );\n\n    return {\n        availablePaymentMethods,\n        currentSelectedPaymentMethod,\n        handlePaymentMethodSelection,\n        initialSelectedMethod,\n        isLoading: loading\n    };\n};\n","import api from \"!../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../../../../postcss-loader/dist/cjs.js!./paymentMethods.module.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { shape, string, bool, func } from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { usePaymentMethods } from '@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/usePaymentMethods';\n\nimport { useStyle } from '../../../classify';\nimport RadioGroup from '@magento/venia-ui/lib/components/RadioGroup';\nimport Radio from '@magento/venia-ui/lib/components/RadioGroup/radio';\nimport defaultClasses from './paymentMethods.module.css';\nimport payments from './paymentMethodCollection';\n\nconst PaymentMethods = props => {\n    const {\n        classes: propClasses,\n        onPaymentError,\n        onPaymentSuccess,\n        resetShouldSubmit,\n        shouldSubmit\n    } = props;\n\n    const { formatMessage } = useIntl();\n\n    const classes = useStyle(defaultClasses, propClasses);\n\n    const talonProps = usePaymentMethods({});\n\n    const {\n        availablePaymentMethods,\n        currentSelectedPaymentMethod,\n        handlePaymentMethodSelection,\n        initialSelectedMethod,\n        isLoading\n    } = talonProps;\n\n    if (isLoading) {\n        return null;\n    }\n\n    const radios = availablePaymentMethods\n        .map(({ code, title }) => {\n            // If we don't have an implementation for a method type, ignore it.\n            if (!Object.keys(payments).includes(code)) {\n                return;\n            }\n\n            const id = `paymentMethod--${code}`;\n            const isSelected = currentSelectedPaymentMethod === code;\n            const PaymentMethodComponent = payments[code];\n            const renderedComponent = isSelected ? (\n                <PaymentMethodComponent\n                    onPaymentSuccess={onPaymentSuccess}\n                    onPaymentError={onPaymentError}\n                    resetShouldSubmit={resetShouldSubmit}\n                    shouldSubmit={shouldSubmit}\n                />\n            ) : null;\n\n            return (\n                <div key={code} className={classes.payment_method}>\n                    <Radio\n                        id={id}\n                        label={title}\n                        value={code}\n                        classes={{\n                            label: classes.radio_label\n                        }}\n                        checked={isSelected}\n                        onChange={handlePaymentMethodSelection}\n                    />\n                    {renderedComponent}\n                </div>\n            );\n        })\n        .filter(paymentMethod => !!paymentMethod);\n\n    const noPaymentMethodMessage = !radios.length ? (\n        <div className={classes.payment_errors}>\n            <span>\n                {formatMessage({\n                    id: 'checkoutPage.paymentLoadingError',\n                    defaultMessage: 'There was an error loading payments.'\n                })}\n            </span>\n            <span>\n                {formatMessage({\n                    id: 'checkoutPage.refreshOrTryAgainLater',\n                    defaultMessage: 'Please refresh or try again later.'\n                })}\n            </span>\n        </div>\n    ) : null;\n\n    return (\n        <div className={classes.root}>\n            <RadioGroup\n                classes={{ root: classes.radio_group }}\n                field=\"selectedPaymentMethod\"\n                initialValue={initialSelectedMethod}\n            >\n                {radios}\n            </RadioGroup>\n            {noPaymentMethodMessage}\n        </div>\n    );\n};\n\nexport default PaymentMethods;\n\nPaymentMethods.propTypes = {\n    classes: shape({\n        root: string,\n        payment_method: string,\n        radio_label: string\n    }),\n    onPaymentSuccess: func,\n    onPaymentError: func,\n    resetShouldSubmit: func,\n    selectedPaymentMethod: string,\n    shouldSubmit: bool\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".paymentMethods-root-6-M {\\n}\\n\\n.paymentMethods-radio_group-EOw {\\n}\\n\\n.paymentMethods-payment_method--1h {\\n}\\n\\n/* TODO @TW: cannot compose */\\n.paymentMethods-payment_method--1h:last-of-type {\\n    /* composes: border-b-0 from global; */\\n    border-bottom-width: 0;\\n}\\n\\n.paymentMethods-radio_label-A8v {\\n}\\n\\n.paymentMethods-payment_errors-3Hl {\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.module.css\"],\"names\":[],\"mappings\":\"AAAA;AAIA;;AAEA;AAEA;;AAEA;AAMA;;AAEA,6BAA6B;AAC7B;IACI,sCAAsC;IACtC,sBAAsB;AAC1B;;AAEA;AAGA;;AAEA;AAIA\",\"sourcesContent\":[\".root {\\n    composes: grid from global;\\n    composes: p-md from global;\\n    composes: pb-s from global;\\n}\\n\\n.radio_group {\\n    composes: grid from global;\\n}\\n\\n.payment_method {\\n    composes: border-b from global;\\n    composes: border-solid from global;\\n    composes: border-subtle from global;\\n    composes: pb-xs from global;\\n    composes: pt-xs from global;\\n}\\n\\n/* TODO @TW: cannot compose */\\n.payment_method:last-of-type {\\n    /* composes: border-b-0 from global; */\\n    border-bottom-width: 0;\\n}\\n\\n.radio_label {\\n    composes: font-semibold from global;\\n    composes: justify-self-start from global;\\n}\\n\\n.payment_errors {\\n    composes: grid from global;\\n    composes: gap-2xs from global;\\n    composes: text-error from global;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"root\": \"paymentMethods-root-6-M grid p-md pb-s\",\n\t\"radio_group\": \"paymentMethods-radio_group-EOw grid\",\n\t\"payment_method\": \"paymentMethods-payment_method--1h border-b border-solid border-subtle pb-xs pt-xs\",\n\t\"radio_label\": \"paymentMethods-radio_label-A8v font-semibold justify-self-start\",\n\t\"payment_errors\": \"paymentMethods-payment_errors-3Hl grid gap-2xs text-error\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}